#include "stdio.h"
//数组指针举例
int main() {
	int arr[10] = {0, 0, 0, 0, 0, 0, 0, 0, 9, 10};
	int *p = arr;
	int (*p2)[10] = &arr;//等号右边是地址，所以要用指针进行存储。
	//(*p2)说明p2这是一个指针，[ ]说明它指向一个数组，10表示数组的长度，int 表示指向数组的类型
	//这样它就指向了一个有10个整形变量的数组，然后将数组的地址赋予p2
	printf("%p\n", p[9]);//p就是arr的首地址p=arr,p[9]=arr[9]，arr[9]相当于首地址向后位移9个int步长，找到了10这个元素
	printf("%p\n", *(p + 9));	//p+9相当于首地址向后位移9个int步长，然后利用*取出这个地址存放的值。
	printf("%p\n", &arr);//数组的地址，他相当于是一个很宽的范围，但是只显示边缘的地址，所以值和数组首地址一样。
	printf("%p\n", p + 1);
	printf("%p\n", &arr + 1);
	printf("%p\n", (*p2)[10]);//p2存的是arr数组的地址，p2的类型是int* [10]，不是简单的int形，*p取出了arr数组,*p=arr
	//*p[10]=arr[10]，可以将数组指针看成一个很宽的箭头，它由p[0],p[1]...p[10]组成，就像很多股细绳拧在一起构成一根麻绳
	char *arr2[5] = {0}; //arr2是一个指针数组，里面存放了五个指向char类型的指针。
	char *(*pc)[5] = &arr2; //arr2的地址要保存在指针中，*pc说明pc是个指针。
	//这个指针指向一个数组，[5]表示它指向一个五个元素的数组，每个元素的类型都是char *
}

//数组指针的应用
int main() {
	int arr[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
	int (* pa)[10] = &arr; //pa这个指针指向一个十个元素的数组，[]里面的10不能少，不然会被视为0
	int i = 0;
	for (i = 0; i < 10; i++)
		printf("%d ", (*pa)[i]);//*pa取出arr，*pa[i]=arr[i]
	printf("\n");
	for (i = 0; i < 10; i++)
		printf("%d ", *(*pa + i)); //*pa取出arr相当于取出这个数组名，本质上就是数组的首地址，*pa+i相当于arr向后位移i个int步长
	//*(*pa+i)就是取出这个数
}

